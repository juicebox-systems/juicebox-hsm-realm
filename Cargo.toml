[workspace]

members = [
    "agent_api",
    "agent_core",
    "async_util",
    "bigtable",
    "bitvec",
    "build_info",
    "chaos_puppy",
    "cluster_api",
    "cluster_bench",
    "cluster_cli",
    "cluster_core",
    "cluster_manager",
    "codegen",
    "election",
    "entrust_agent",
    "entrust_api",
    "entrust_hsm",
    "entrust_init",
    "entrust_nfast",
    "entrust_ops",
    "google",
    "google_pubsub",
    "hsm_api",
    "hsm_core",
    "jburl",
    "load_balancer",
    "lru-cache",
    "merkle_tree_docgen",
    "observability",
    "pubsub_api",
    "retry_loop",
    "secret_manager",
    "service_core",
    "service_checker",
    "software_agent",
    "software_hsm",
    "software_hsm_client",
    "store",
    "table",
    "testing",
]

default-members = [
    "agent_api",
    "agent_core",
    "async_util",
    "bigtable",
    "bitvec",
    "chaos_puppy",
    "cluster_api",
    "cluster_bench",
    "cluster_cli",
    "cluster_core",
    "cluster_manager",
    "codegen",
    "election",
    "entrust_ops",
    "google",
    "google_pubsub",
    "hsm_api",
    "hsm_core",
    "jburl",
    "load_balancer",
    "lru-cache",
    "observability",
    "pubsub_api",
    "retry_loop",
    "secret_manager",
    "service_core",
    "service_checker",
    "software_agent",
    "software_hsm",
    "software_hsm_client",
    "store",
    "table",
    "testing",
]

# This allows the submodules to reference their workspaces (for dependencies
# and such), rather than this one.
exclude = ["ciborium", "gcp_auth", "sdk"]
resolver = "2"

[workspace.package]
rust-version = "1.75"
version = "0.2.3"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html
[workspace.dependencies]
agent_api = { path = "agent_api" }
agent_core = { path = "agent_core" }
anyhow = "1.0.79"
async-channel = "2.2.0"
async-trait = "0.1.77"
async_util = { path = "async_util" }
bigtable = { path = "bigtable" }
bindgen = "0.69.1"
bitvec = { path = "bitvec" }
blake2 = { version = "0.10.6", default-features = false }
build_info = { path = "build_info" }
bytes = { version = "1.5.0", default-features = false }
cbor-diag = { version = "0.1.12" }
chacha20poly1305 = { version = "0.10.1", default-features = false, features = [
    "alloc",
] }
# Simon audited chrono 0.4.30 in Sept 2023. Didn't review anything behind a feature flag.
# Diego audited chrono's changes from 0.4.30 to 0.4.31 in Jan 2024.
chrono = { version = "=0.4.31", default-features = false }
# ciborium and ciborium-io are pinned because we have a local fork.
ciborium = { version = "=0.2.1", default-features = false }
ciborium-io = { version = "=0.2.1", default-features = false }
clap = { version = "4.4.14", features = ["derive", "string", "env"] }
cluster_api = { path = "cluster_api" }
cluster_core = { path = "cluster_core" }
digest = "0.10.7"
# Diego audited dogstatsd v0.10.0 in Aug 2023.
# Simon audited dogstatsd v0.11.1 in Nov 2023.
dogstatsd = "=0.11.1"
election = { path = "election" }
entrust_api = { path = "entrust_api" }
entrust_nfast = { path = "entrust_nfast" }
expect-test = "1.4.1"
futures = "0.3.30"
# gcp_auth is pinned because we have a local fork.
gcp_auth = { version = "=0.9.0", default-features = false, features = [
    "webpki-roots",
] }
google = { path = "google" }
google_pubsub = { path = "google_pubsub" }
hashbrown = { version = "0.14.3", default-features = false, features = [
    "inline-more",
    "serde",
] }
hdrhistogram = { version = "7.5.4", default-features = false }
# Google and Mozilla audited hex 0.4.3 (`cargo vet`).
hex = "=0.4.3"
hkdf = "0.12.4"
hmac = "0.12.1"
hsm_api = { path = "hsm_api" }
hsm_core = { path = "hsm_core" }
http = "0.2.11"
http-body-util = "0.1.0"
hyper = { version = "1.1.0", features = ["http1", "http2", "server"] }
hyper-util = { version = "0.1.2", features = ["tokio"] }
itertools = { version = "0.12.0" }
jburl = { path = "jburl" }
juicebox_sdk = { path = "sdk/rust/sdk", features = ["reqwest", "tokio"] }
juicebox_marshalling = { path = "sdk/rust/marshalling" }
juicebox_networking = { path = "sdk/rust/networking", features = [
    "distributed-tracing",
    "reqwest",
] }
juicebox_noise = { path = "sdk/rust/noise" }
juicebox_oprf = { path = "sdk/rust/oprf" }
juicebox_process_group = { path = "sdk/rust/process_group" }
juicebox_realm_api = { path = "sdk/rust/realm/api" }
juicebox_realm_auth = { path = "sdk/rust/realm/auth" }
lru-cache = { path = "lru-cache" }
nix = { version = "0.27.1", default-features = false, features = ["signal"] }
observability = { path = "observability" }
once_cell = "1.19.0"
opentelemetry = "0.21.0"
opentelemetry-otlp = "0.14.0"
opentelemetry_sdk = { version = "0.21.2", features = ["rt-tokio"] }
pin-project = "1.1.3"
pin-project-lite = "0.2.13"
prost = "0.12.3"
prost-types = "0.12.3"
pubsub_api = { path = "pubsub_api" }
rand = { version = "0.8.5", default-features = false, features = ["alloc"] }
rand_core = "0.6.4"
reqwest = { version = "0.11.23", default-features = false, features = [
    "rustls-tls",
] }
retry_loop = { path = "retry_loop" }
rustls = "0.22.2"
rustls-pemfile = "2.0"
secret_manager = { path = "secret_manager" }
semver = "1.0.21"
serde = { version = "1.0.195", default-features = false, features = [
    "alloc",
    "derive",
] }
serde_json = "1.0.111"
service_core = { path = "service_core" }
sha2 = "0.10.8"
software_hsm_client = { path = "software_hsm_client" }
# Diego audited only the spin mutex in spin 0.9.8 (502c9dc) in Aug 2023.
spin = { version = "=0.9.8", default-features = false, features = [
    "mutex",
    "spin_mutex",
] }
store = { path = "store" }
subtle = { version = "2.5.0", default-features = false }
sysinfo = { version = "0.30" }
table = { path = "table" }
tempfile = "3.9.0"
testing = { path = "testing" }
thiserror = "1.0.56"
tokio = { version = "1.35.1", features = [
    "rt-multi-thread",
    "macros",
    "signal",
] }
tokio-rustls = "0.25.0"
tokio-stream = { version="0.1.14", features = ["sync"] }
tokio-util = { version="0.7.10" }
tonic = { version = "0.10.2", features = [
    "channel",
    "tls",
    "tls-webpki-roots",
] }
tonic-build = "0.10.2"
tower-service = "0.3.2"
tracing = { version = "0.1.40", default-features = false, features = [
    "attributes",
] }
tracing-core = { version = "0.1.32" }
tracing-opentelemetry = "0.22.0"
tracing-subscriber = { version = "0.3.18", features = ["json"] }
url = { version = "2.5.0", features = ["serde"] }
x25519-dalek = { version = "2.0", features = [
    "reusable_secrets",
    "serde",
    "static_secrets",
] }
x509-cert = { version = "0.2.5", default-features = false }

# These local forks are checked out as Git submodules.
#
# Defining the patch section here instead of the paths above allows tooling
# like cargo-upgrade (from the cargo-edit project) to report when the forked
# versions fall behind the crates.io versions.
#
# Using Git submodules instead of poining Cargo to the Git repositories works
# better for offline reproducible builds (for key ceremonies). If we tell Cargo
# about the Git repos, the Git information ends up in Cargo.lock, and we don't
# want to need the full Git repo for offline builds. This also simplifies the
# GitHub Actions workflows, which can easily check out submodules but require
# more configuration to set up Cargo to access private repos.
#
[patch.crates-io]
gcp_auth = { path = "gcp_auth" }
ciborium = { path = "ciborium/ciborium" }
ciborium-io = { path = "ciborium/ciborium-io" }

[profile.release]
debug = true
