# This is based on
# <https://github.com/ongardie/cubicle/blob/b307fe9/.github/workflows/main.yaml>
# with Diego's permission.  The initial workflow YAML skeleton before that was
# based on
# <https://github.com/actions-rs/example/blob/master/.github/workflows/quickstart.yml>
# and
# <https://github.com/ramosbugs/oauth2-rs/blob/main/.github/workflows/main.yml>.
#
# GitHub Actions workflow syntax documentation is here:
# <https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions>.
name: CI

on:
  pull_request: {}
  push:
    branches:
    - main
  workflow_dispatch: {}

jobs:
  build:
    name: Build & check
    runs-on: ubuntu-20.04
    steps:
    - name: Check out sources
      uses: actions/checkout@v2

    - name: Install Rust stable toolchain
      uses: actions-rs/toolchain@v1
      with:
        components: rustfmt, clippy
        override: 'true'
        profile: minimal
        toolchain: stable

    - name: Use Go cache
      uses: actions/cache@v3
      with:
        path: |
          ~/go/bin
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Use Go path
      # See https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions#adding-a-system-path
      run: echo "$(go env GOPATH)/bin" >> $GITHUB_PATH

    - name: Install Bigtable tools
      run: |
        command -V emulator || go install cloud.google.com/go/bigtable/cmd/emulator@latest
        command -V cbt || go install cloud.google.com/go/cbt@latest

    - name: Use Rust/Cargo cache
      uses: actions/cache@v3
      with:
        key: cargo-ubuntu-20.04-stable-${{ hashFiles('Cargo.lock') }}
        path: |
          ~/.cargo/registry
          ~/.cargo/git/
          target/
        restore-keys: cargo-ubuntu-20.04-stable-

    - name: Run cargo build
      uses: actions-rs/cargo@v1
      with:
        command: build

    - name: Run cargo test
      uses: actions-rs/cargo@v1
      with:
        args: --all
        command: test
      env:
        RUST_BACKTRACE: '1'

    - name: Run cargo fmt
      uses: actions-rs/cargo@v1
      with:
        args: --all -- --check
        command: fmt

    - name: Run clippy
      uses: actions-rs/cargo@v1
      with:
        args: -- -D warnings
        command: clippy

    - name: Install cargo audit
      uses: actions-rs/cargo@v1
      with:
        args: cargo-audit
        command: install

    - name: Run cargo audit
      uses: actions-rs/cargo@v1
      with:
        command: audit

    - name: Run main
      run: |
        emulator -host localhost -port 9000 &
        BIGTABLE_EMULATOR_HOST=localhost:9000 \
          cbt -creds /dev/null -project prj -instance inst \
          createtable tab families=fam
        pid=$!
        RUST_BACKTRACE=1 cargo run --bin demo
        kill $pid
      shell: bash

    - name: Install latest nightly
      uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly
        override: false
        components: rust-src

    - name: Install PowerPC cross-compile dependencies
      run: sudo apt install qemu qemu-user qemu-user-binfmt gcc-9-powerpc-linux-gnu

    - name: Cross Compile PowerPC
      run: ./build-ppc.sh

    - name: Run unit tests on PowerPC
      run: ./test-ppc.sh
