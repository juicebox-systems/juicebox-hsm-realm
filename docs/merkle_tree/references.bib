@misc{jbp,
url={https://juicebox.xyz/papers/TODO.pdf},
title={Juicebox Protocol},
author={Trapp, Nora and Ongaro, Diego},
year={2023},
month={Jun},
}
@misc{acp,
url={https://juicebox.xyz/papers/TODO.pdf},
title={Authenticated Consensus Protocol},
author={Ongaro, Diego and Fell, Simon},
year={2023},
month={Jun},
}
@InProceedings{merkle,
author="Merkle, Ralph C.",
editor="Pomerance, Carl",
title="A Digital Signature Based on a Conventional Encryption Function",
booktitle="Advances in Cryptology --- CRYPTO '87",
year="1988",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="369--378",
abstract="A new digital signature based only on a conventional encryption function (such as DES) is described which is as secure as the underlying encryption function -- the security does not depend on the difficulty of factoring and the high computational costs of modular arithmetic are avoided. The signature system can sign an unlimited number of messages, and the signature size increases logarithmically as a function of the number of messages signed. Signature size in a `typical' system might range from a few hundred bytes to a few kilobytes, and generation of a signature might require a few hundred to a few thousand computations of the underlying conventional encryption function.",
isbn="978-3-540-48184-3"
}
@article{radix,
author = {Morrison, Donald R.},
title = {PATRICIA—Practical Algorithm To Retrieve Information Coded in Alphanumeric},
year = {1968},
issue_date = {Oct. 1968},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {15},
number = {4},
issn = {0004-5411},
url = {https://doi.org/10.1145/321479.321481},
doi = {10.1145/321479.321481},
abstract = {PATRICIA is an algorithm which provides a flexible means of storing, indexing, and retrieving information in a large file, which is economical of index space and of reindexing time. It does not require rearrangement of text or index as new material is added. It requires a minimum restriction of format of text and of keys; it is extremely flexible in the variety of keys it will respond to. It retrieves information in response to keys furnished by the user with a quantity of computation which has a bound which depends linearly on the length of keys and the number of their proper occurrences and is otherwise independent of the size of the library. It has been implemented in several variations as FORTRAN programs for the CDC-3600, utilizing disk file storage of text. It has been applied to several large information-retrieval problems and will be applied to others.},
journal = {J. ACM},
month = {oct},
pages = {514–534},
numpages = {21}
}
@misc{blake,
title={RFC 7693: The blake2 cryptographic hash and message authentication code (MAC)},
url={https://datatracker.ietf.org/doc/html/rfc7693},
journal={IETF Datatracker},
author={Saarinen, Markku-Juhani O. and Aumasson, Jean-Philippe},
year={2015},
month={Nov}
}
@inproceedings{bigtable,
title	= {Bigtable: A Distributed Storage System for Structured Data},
author	= {Fay Chang and Jeffrey Dean and Sanjay Ghemawat and Wilson C. Hsieh and Deborah A. Wallach and Mike Burrows and Tushar Chandra and Andrew Fikes and Robert E. Gruber},
year	= {2006},
booktitle	= {7th {USENIX} Symposium on Operating Systems Design and Implementation (OSDI)},
pages	= {205--218}
}
@techreport{chachapoly,
    number =    {draft-irtf-cfrg-xchacha-03},
    type =      {Internet-Draft},
    institution =   {Internet Engineering Task Force},
    publisher = {Internet Engineering Task Force},
    note =      {Work in Progress},
    url =       {https://datatracker.ietf.org/doc/draft-irtf-cfrg-xchacha/03/},
        author =    {Scott Arciszewski},
    title =     {{XChaCha: eXtended-nonce ChaCha and AEAD\_XChaCha20\_Poly1305}},
    pagetotal = 18,
    year =      2020,
    month =     jan,
    day =       10,
    abstract =  {The eXtended-nonce ChaCha cipher construction (XChaCha) allows for ChaCha-based ciphersuites to accept a 192-bit nonce with similar guarantees to the original construction, except with a much lower probability of nonce misuse occurring. This helps for long running TLS connections. This also enables XChaCha constructions to be stateless, while retaining the same security assumptions as ChaCha. This document defines XChaCha20, which uses HChaCha20 to convert the key and part of the nonce into a subkey, which is in turn used with the remainder of the nonce with ChaCha20 to generate a pseudorandom keystream (e.g. for message encryption). This document also defines AEAD\_XChaCha20\_Poly1305, a variant of {[}RFC8439{]} that utilizes the XChaCha20 construction in place of ChaCha20.},
}
@inproceedings {hashdos,
author = {Scott A. Crosby and Dan S. Wallach},
title = {Denial of Service via Algorithmic Complexity Attacks},
booktitle = {12th USENIX Security Symposium (USENIX Security 03)},
year = {2003},
address = {Washington, D.C.},
url = {https://www.usenix.org/conference/12th-usenix-security-symposium/denial-service-algorithmic-complexity-attacks},
publisher = {USENIX Association},
month = aug,
}
